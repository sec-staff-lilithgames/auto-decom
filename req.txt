我们现在要做一个自动反汇编自动机，先把这个东西实现到本地
1. 输入是一个apk包
2. 第一个模块py叫做sofinder，负责解压，找到lib中arm64下的所有so，还有assests目录下所有以.so结尾的so，新建一个目录叫做so，目录结构加一层lib和assets用于区分是哪里来的so，子目录按照so名称单独把每个so放到一个目录下
3. 第二个模块叫做decompiler，负责反汇编，引擎我们采用Ghidra headless，目标是得到伪c文件和asm文件，它负责将第二条说的so目录复制一份并递归对每个so进行反汇编，最终完成之后删除原so得到so_decom目录
4. 第三个模块叫做zipper，负责递归对so_decomp中的每个子目录进行压缩，最终呈现结果zip包交付给用户


注意，最上层只暴露一个run.py供用户使用，用户无需指定任何参数，只需要简单的python3 run.py就可以得到目标zip包。在反汇编的时候默认开最大线程数并行对每个so进行并行反汇编，硬件资源是无限的，因此无需考虑资源问题